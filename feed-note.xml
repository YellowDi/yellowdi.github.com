<?xml version="1.0" encoding="utf-8"?>









































































































































<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YellowDi</title>
  <subtitle>I make things that don’t suck.</subtitle>
  <updated>2018-05-23T10:07:40+08:00</updated>
  <id>https://yellowdi.github.io//</id>
  <rights>Copyright © 2018, YellowDi</rights>

  <link rel="alternate" type="text/html" hreflang="en" href="https://yellowdi.github.io//" />
  <link rel="self" type="application/atom+xml" href="https://yellowdi.github.io/feed-note.xml" />

  <author>
    <name>YellowDi</name>
    <uri>https://yellowdi.github.io//</uri>
    <email>yellowdi@me.com</email>
  </author>

  
    
      

      

      <entry>
        <title>Windows 10 字体显示优化方案</title>
        <id>https://yellowdi.github.io//note/make-windows10-font-look-better/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/make-windows10-font-look-better/" />
        <published>2016-06-28T00:00:00+08:00</published>

        
          <updated>2018-05-15T16:13:31+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;对于我个人而来，我始终认为 macOS 在字体渲染上要优于 Windows。对于字体的渲染和显示的思路是要让屏幕上显示的字体和在纸上打印的效果一样的 macOS 而言，微软 Windows 的思路则是经可能适应更多的设备，也就是说 Windows 需要字体在低分辨率设备上也能看清楚，即便如此会导致字体笔画发生一定的改变。&lt;/p&gt;

&lt;p&gt;这一最初设计思路的不同也就导致了两者在字体渲染上很大的差异。从系统开发之初确定的这一思路陆续影响到了后来的应用开发。而到了高分辨率屏幕渐渐普及的今天，传统的 GDI 引擎不能适应高分辨率，也就导致之前开发的 Win32 应用中的字体在高 DPI 情况下显示模糊或者不正常。到了 Windows 10 之后，微软对于 Universal Windows Platform 的应用一律采用 DirectWrite 进行字体渲染，所以 UWP 应用基本上不用担心高 DPI 下字体的渲染问题，在高分辨率情况下的字体渲染与显示会很好。&lt;/p&gt;

&lt;p&gt;但是，Windows 10 所带字体其问题在于包含了不合适的 GASP 表 (GASP 的作用是告诉字体渲染引擎，在什么样的分辨率下采用什么样的渲染参数)。&lt;/p&gt;

&lt;p&gt;😂&lt;/p&gt;

&lt;p&gt;比如在高 DPI 或者大字号下面就不需要让字体渲染引擎进行 Hint (让字体在低分辨率的液晶屏幕上也能清晰显示的技术)，大量的显示器像素点完全可以达到矢量字体的设计效果。只有在字比较小或者低分辨率屏幕上，就应该启用 Hinting，否则字体就模糊了。然而，如果用户的屏幕本身已经是高分辨率的情况下，再告诉渲染引擎用 Hint 对字体进行清晰化，就会导致本来可以清晰显示的字体变得十分难看，或是高低不平，或是挤成一团。这一问题在 Windows 10 Build 10586 中有了一定的缓解。然而，对于处于高分辨率和低分辨率之间的模糊地带屏幕来说却仍然不够好。这些屏幕并没有 Retina 那样的高分辨率，但是对于普通屏幕来说分辨率也不低。就比如现在很多电脑使用的 1080p 的屏幕。使用推荐的 125% DPI情况下，字体笔画之间仍然会出现一些不协调的情况。&lt;/p&gt;

&lt;p&gt;另外是存在于 Windows 7、Windows 8/8.1、Windows 10 中的一个历史遗留问题，也就是说只要是采用 GDI 引擎的传统 Win32 应用在高 DPI 下都会模糊。&lt;/p&gt;

&lt;p&gt;解决方案&lt;/p&gt;

&lt;p&gt;如何修正 Windows 10 的字体渲染问题？极限社区的大神 &lt;a href=&quot;http://bbs.themex.net/showthread.php?t=16903935&quot;&gt;RadarNyan&lt;/a&gt; 给出了的方案是修正 GASP 表来使所有 DPI 下均不使用 Hint 进行字体渲染。利用一个脚本可以批量将字体的 GASP 表进行修正。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;注意：以下操作涉及到系统文件修改，请注意备份。并且此修正方案在升级系统（大升级）后可能会消失。&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;备份 X:\Windows\Fonts 内的所有字体文件&lt;/li&gt;
  &lt;li&gt;下载&lt;a href=&quot;http://pan.baidu.com/s/1i3CQdYd&quot;&gt;这个&lt;/a&gt;已修正完成的字体包手动替换&lt;/li&gt;
  &lt;li&gt;重启电脑&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后，你会发现 DirectWrite 下面字体的显示有了很大的提升。另外搭配使用 MacType 来解决传统字体引擎 GDI 的历史遗留问题。最后附上几张效果图（由 DirectWrite 渲染，DPI 设置为 100%）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xp63o.com1.z0.glb.clouddn.com/UWP-1.png&quot; alt=&quot;网易云音乐 UWP 版渲染效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://7xp63o.com1.z0.glb.clouddn.com/UWP-2.png&quot; alt=&quot;网易云音乐 UWP 版渲染效果&quot; /&gt;&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary>对于我个人而来，我始终认为 macOS 在字体渲染上要优于 Windows。对于字体的渲染和显示的思路是要让屏幕上显示的字体和在纸上打印的效果一样的 macOS 而言，微软 Windows 的思路则是经可能适应更多的设备，也就是说 Windows 需要字体在低分辨率设备上也能看清楚，即便如此会导致字体笔画发生一定的改变。</summary>
        
      </entry>
    
  
    
      

      

      <entry>
        <title>「放娘的狗屁」</title>
        <id>https://yellowdi.github.io//note/what-am-i/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/what-am-i/" />
        <published>2016-05-26T00:00:00+08:00</published>

        
          <updated>2018-05-15T16:13:26+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;&lt;img src=&quot;http://7xp63o.com1.z0.glb.clouddn.com/CjW8O_mUgAAPCxn.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary></summary>
        
      </entry>
    
  
    
      

      

      <entry>
        <title>Project 2M</title>
        <id>https://yellowdi.github.io//note/project-2m/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/project-2m/" />
        <published>2013-09-23T00:00:00+08:00</published>

        
          <updated>2018-05-15T16:13:20+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;我和王欢想到把一种多用户协同维护数据的工作机制带入我们单位这个技术荒野。动机很简单，现有的手段实在太原始了，完全是在浪费时间做重复的事，而且每个单位又很难做到资料上的同步，和别人核对资料还需要夹着电话一个个比对，这简直是八十年代啊。所以我们想用现拥有的能力改变这一切。&lt;/p&gt;

&lt;p&gt;首先我们计划的第一步是基于已有的基础，将数据上传、归档整理并建立索引。基于Excel表格的数据很容易让所有人参与进来，我只要强制规定一个标准模型，在已有资料的基础上这事会非常轻松。我还引用了维基百科式的用户权限机制，人人参与的同时又保持质量。最终目的就是当网管中心或者其他不能忽悠的人电话问你这个口子现在在用还是空闲、上一站是哪里这样的问题时，你可以很快速很全面的查询到并帅气的回答他。&lt;/p&gt;

&lt;p&gt;本来是计划做成一个程序的，但由于条件受限只能先做成一个网站。前端用Bootstrap做异常快，我还是用v2版本，熟悉是一方面原因，v3的那种扁平化我暂时无法欣赏。后台方面大多用开源代码做的功能模块，这过程感觉就像板砖。整个网站的核心机制就是将Excel表格数据转换成到数据库并为保证安全对其加密这个功能，这方面王欢以前学过，毕业作品也是同样原理的一个程序，两个人互学互补这过程很愉快。&lt;/p&gt;

&lt;p&gt;另外我用上刚学会的Python做了一个伪自然语言跨文档搜索功能，取了个逼格很高的名字：Spotlight。什么是Spotlight？比如，搜索「到徐州有哪些口子是在用的？」、「帮我查到所有走网络业务的口子」之类的人类语言就能快速准确的搜索出来。原理其实挺弱智，设定几个关键词用作搜索词，比如「在用」、「南京」这样的，其余像「帮我找」、「有哪些」之类的直接忽略掉。结果就是看起来很牛逼的样子，实际承受不了任何趣味的恶搞，毫无幽默感，一点都不像我。&lt;/p&gt;

&lt;p&gt;还有一个功能叫做「时光机」。灵感来自于平时生活中常常会碰到需要知道某个口子的历史情况，之前走的什么业务、到哪里去之类的。过去的纸质登记完全没可能记录下这些，所以我就幻想要能和Dropbox那样拥有强大又靠谱的数据更改历史纪录的功能。能力有限，我现在是用最笨的方法来实现这个幻想，将每个数据文档配发一个id，每次出现任何更改都将原文档另存为并配发一个新id，通过归档某个数据文件的所有历史id来实现数据的回滚查看。这样做确实很偷懒，但我始终感觉这样做是在给未来留下一个麻烦，毕竟数据库尺寸上的累计随着时间的推移是成倍上升的。可是我对如何实现只另存更改的部分这样的功能完全没概念，手足无措好尴尬，谁会就教教我，请你吃饭，什么都行。&lt;/p&gt;

&lt;p&gt;最后，这篇文章发出去的时候，网站已经上线了。很奇怪，这次我压根就没想到给这网站起名字，有点很不科学，毕竟以前作项目名字总是先取好的，这次压根没考虑网站叫什么，直接拿Project 2M这个项目文件夹名。由于目前网站上只有连云港的资料，还没达到我们预想的状态，所以暂时不给大领导过目。不过我个人对此还是挺有信心的，给一些机房骨干演示了如何维护、搜索、统计数据，得到了很多赞赏和中肯的建议。那瞬间萌生一个想法，如果这个项目能在十一月前得到大领导们给予赏识的话，有用武之地的我可能不太愿意回宁波。&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary>我和王欢想到把一种多用户协同维护数据的工作机制带入我们单位这个技术荒野。动机很简单，现有的手段实在太原始了，完全是在浪费时间做重复的事，而且每个单位又很难做到资料上的同步，和别人核对资料还需要夹着电话一个个比对，这简直是八十年代啊。所以我们想用现拥有的能力改变这一切。</summary>
        
      </entry>
    
  
    
      

      

      <entry>
        <title>恋爱中男生最幸福的时刻是什么时候？</title>
        <id>https://yellowdi.github.io//note/what-time-is-the-love-of-boys-is-the-happiest-moment/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/what-time-is-the-love-of-boys-is-the-happiest-moment/" />
        <published>2013-04-07T00:00:00+08:00</published>

        
          <updated>2018-05-15T16:13:13+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;今天在知乎看到一个问题「恋爱中男生最幸福的时刻是什么时候？」&lt;/p&gt;

&lt;p&gt;我犹豫了一下，什么时候最幸福，一阵面红耳赤以后我回答道：&lt;strong&gt;正在敲「我想你了」时，收到同样内容的短信。&lt;/strong&gt; &lt;a href=&quot;https://www.zhihu.com/question/20220590/answer/16615128&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;继续面红耳赤&lt;/p&gt;

&lt;p&gt;😳&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary>今天在知乎看到一个问题「恋爱中男生最幸福的时刻是什么时候？」</summary>
        
      </entry>
    
  
    
      

      

      <entry>
        <title>2012</title>
        <id>https://yellowdi.github.io//note/goodbye-2012/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/goodbye-2012/" />
        <published>2012-12-31T00:00:00+08:00</published>

        
          <updated>2018-05-15T16:13:05+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;今天是2012年的最后一天。&lt;/p&gt;

&lt;p&gt;这一年对于我和其他和我一道来徐州的朋友们来说实则漫长。&lt;/p&gt;

&lt;p&gt;我们告别家乡告别各自爱的人，踏上火车仿佛还是昨天，时间已经过去一半了。&lt;/p&gt;

&lt;p&gt;这一年有人离开挚爱有人找到真爱，有人继续奋斗有人回到起点。&lt;/p&gt;

&lt;p&gt;庆幸我们的同甘共苦，庆幸你我的坚持到底，庆幸世界末日时的那点不甘心。&lt;/p&gt;

&lt;p&gt;这一年，我的情绪和我的体重跌宕起伏，很多事都变了，除了我的肌肉，一点长进都没有。&lt;/p&gt;

&lt;p&gt;这一年我做了前所未见的事，遇了难以想象的人，喝了不少酒抽了不少烟看了不少电影写了不少文章做错很多事，学会了乒乓球学会了南京话，收益颇丰却还是悔不当初。&lt;/p&gt;

&lt;p&gt;这一年我在成长的道路中几经退后，在成熟的过程中多次徘徊。&lt;/p&gt;

&lt;p&gt;总的来说，这一年，我很怀念它。&lt;/p&gt;

&lt;p&gt;天气晴朗，路还很长。&lt;/p&gt;

&lt;p&gt;同时我们应该始终相信人生那完美结局终会属于我们这些在浪里打滚的小人物。&lt;/p&gt;

&lt;p&gt;无论怎么样，祝大家新年好。&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary>今天是2012年的最后一天。</summary>
        
      </entry>
    
  
    
      

      

      <entry>
        <title>我们各自努力，朝着不同的方向</title>
        <id>https://yellowdi.github.io//note/different-life/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/different-life/" />
        <published>2012-10-03T00:00:00+08:00</published>

        
          <updated>2018-05-15T16:12:48+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;那是一个大年三十，风很冷。小阿姨工作的饭店里大多数职工都回家过年，没什么人，我和老弟就去端端菜收收钱之类的，没什么技术含量。即使过年饭店依旧要开着，要给那些懒得在家做团圆饭的人一张桌子和一些菜，让他们吃得开心。&lt;/p&gt;

&lt;p&gt;那是一家很有特色的小饭店，宁波人应该都会知道。在联丰好又多旁边，叫「灵桥公社」。员工穿着老革命那种绿军装，再带上帽子和扫把是可以去打鬼子的。里面的职员大多来自安徽和河南，有两个女服务员是带我和老弟入门的。老弟在一楼大厅，我在二楼包厢，一个带一个。&lt;/p&gt;

&lt;p&gt;我的工作或是说职责就是等菜从厨房用电梯送上来时，只要是这个楼层的我拿出来摆在桌上等其他人送到包厢里就行，简单。有时厨房像吃了兴奋剂一样，菜一道接一道，我都快忙不过来；有时盘子又烫到不得了，不好下手去拿，我皮嫩……&lt;/p&gt;

&lt;p&gt;但闲下来的时候，我们就聊天，人生和死亡什么都聊。她说从没有人和她聊过这么深奥的话题，我很高兴她这样说。得知她已经结了婚还有孩子在肚子里让我很惊讶，这么年轻难以置信。她说女人嫁一个知冷知热、真心对她好的人就够了。我疑惑她二十岁前就打算结婚生子，家庭事业和孩子的未来准备好了吗？我没问出口，我只是祝她生活幸快乐。过了几天，她放在柜子里的钱被偷了，是自己人干的。她变得异常焦虑，口无遮拦骂那个偷钱的人。我能理解这些钱对于她是多么重要，安慰似乎没什么用，于是我站在一旁等，和她一样等着有人自首或是警察能发现点蛛丝马迹。一直等我领完工资结束在这里接菜的工作时，依然没人知道是谁拿得钱。现在好又多变沃尔玛，饭店也已是物是人非了。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;前些天我们单位大装修，来了一支工程队。最大的有六十最小的才十九，都是徐州人。中秋佳节都回去团圆只有一个人，也就是那个最小的留了下来了，继续刷未完成两面墙。他九四年生，和我老弟一样大。家里有哥哥姐姐，自己初中没读完就去施工队做小工，搬搬水泥和涂料之类的活，很累。现在他主要是给墙刷涂料，动作很利索。坐下来聊天时我问他玩什么游戏？（男孩子嘛，还能聊什么呢）他说在家只玩单机的，红警、帝国之类的，这点和我很像。他说他有一百个QQ好友，我很羡慕。他说他不爱打电话，我说我也是。他很乐观，我很悲观。我们俩已经是朋友了。我问他是不是打算一直做下去，他说他不知道。我问他有没有梦想，他支支吾吾答不上来。我很奇怪，他怎么没有梦想呢。是梦想太遥远想都不敢想吗？我告诉他不要这样想，朝着梦想努力，不管是想当总统还是登月球，会实现的。他没说话，看着天，那有一片云彩，离我们很远。&lt;/p&gt;

&lt;p&gt;有的人会觉得自己我很努力了，但是距想要的结果还是太遥远。我只能说要么是你订的目标不对，要么是你努力的姿势不对，要么是你根本不够努力。「我们要多努力，才能看起来毫不费力。」这个过程中的艰辛，只有努力过的人才知道。而只有你爬到了山顶，整座山才会依托你。&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary>那是一个大年三十，风很冷。小阿姨工作的饭店里大多数职工都回家过年，没什么人，我和老弟就去端端菜收收钱之类的，没什么技术含量。即使过年饭店依旧要开着，要给那些懒得在家做团圆饭的人一张桌子和一些菜，让他们吃得开心。</summary>
        
      </entry>
    
  
    
      

      

      <entry>
        <title>Hello World</title>
        <id>https://yellowdi.github.io//note/hello-world/</id>
        <link rel="alternate" type="text/html" href="https://yellowdi.github.io//note/hello-world/" />
        <published>1993-09-29T00:00:00+08:00</published>

        
          <updated>2018-03-22T05:31:04+08:00</updated>
        

        <author>
          <name>YellowDi</name>
          <uri>http://yellowdi.github.io/</uri>
          <email>yellowdi@me.com</email>
        </author>

        <content type="html" xml:base="https://yellowdi.github.io//">
          
            &lt;p&gt;Yes, it’s me.&lt;/p&gt;

          
          
        
      
        </content>

        
          <summary>Yes, it’s me.</summary>
        
      </entry>
    
  
</feed>
